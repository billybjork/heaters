services:

  # 1) Prefect metadata Postgres
  prefect-postgres:
    image: postgres:16-alpine
    container_name: prefect-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER:     ${PREFECT_POSTGRES_USER:-prefect}
      POSTGRES_PASSWORD: ${PREFECT_POSTGRES_PASSWORD:-prefect}
      POSTGRES_DB:       ${PREFECT_POSTGRES_DB:-prefect}
    volumes:
      - prefect_pgdata:/var/lib/postgresql/data
    ports:
      - "${PREFECT_POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PREFECT_POSTGRES_USER:-prefect} -d ${PREFECT_POSTGRES_DB:-prefect}"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 60s
    networks:
      - app-network

  # 2) Prefect Orion Server (API & UI)
  prefect-server:
    build:
      context: ./backend
      dockerfile: Dockerfile.prefect-server
    container_name: prefect-server
    restart: unless-stopped
    depends_on:
      prefect-postgres:
        condition: service_healthy
    environment:
      PREFECT_SERVER_API_HOST: 0.0.0.0
      PREFECT_UI_API_URL: http://localhost:4200/api
      PREFECT_API_DATABASE_CONNECTION_URL: "postgresql+asyncpg://${PREFECT_POSTGRES_USER}:${PREFECT_POSTGRES_PASSWORD}@prefect-postgres:${PREFECT_POSTGRES_PORT}/${PREFECT_POSTGRES_DB}"
      PREFECT_API_DATABASE_TIMEOUT: ${PREFECT_API_DATABASE_TIMEOUT:-600}
    command: >
      prefect server start --host 0.0.0.0 --port 4200
    ports:
      - "4200:4200"
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://localhost:4200/api/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 120s
    networks:
      - app-network

  # 3) Backend (Prefect worker + Python code)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - .env
    container_name: backend-worker
    restart: unless-stopped
    depends_on:
      prefect-postgres:
        condition: service_healthy
      prefect-server:
        condition: service_healthy
    environment:
      DATABASE_URL:         ${DATABASE_URL}
      PREFECT_WORKER_CONCURRENCY_LIMIT: "3"
      PREFECT_API_URL:      ${PREFECT_API_URL}
      S3_BUCKET_NAME:       ${S3_BUCKET_NAME}
      AWS_REGION:           ${AWS_REGION}
      AWS_ACCESS_KEY_ID:    ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      CLOUDFRONT_DOMAIN:    ${CLOUDFRONT_DOMAIN}
    volumes:
      - ./backend:/app
    command: >
      sh -c "
        echo '‚è≥ Waiting for Prefect‚Ä¶' &&
        until curl -fsS ${PREFECT_API_URL}/health; do sleep 5; done &&
        echo 'üöÄ Starting Prefect worker‚Ä¶' &&
        exec prefect worker start --pool default-agent-pool
      "
    networks:
      - app-network

  # 4) Frontend (Phoenix Release)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    restart: unless-stopped
    env_file:
      - .env
    environment:
      DATABASE_URL: ${DATABASE_URL}
      PHX_HOST: localhost
    ports:
      - "4000:4000"
    networks:
      - app-network
    command: ["/app/bin/frontend", "start"]

volumes:
  prefect_pgdata:

networks:
  app-network:
    driver: bridge