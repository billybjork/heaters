# For DEVELOPMENT environment

volumes:
  app_db_dev_data:

networks:
  app-network:
    driver: bridge

services:
  # Development database
  app-db-dev:
    image: pgvector/pgvector:pg16
    container_name: app-db-dev
    restart: unless-stopped
    environment:
      POSTGRES_USER: dev_user
      POSTGRES_PASSWORD: dev_password
      POSTGRES_DB: heaters_dev_db
    volumes:
      - app_db_dev_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dev_user -d heaters_dev_db"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 30s
    networks:
      - app-network

  # Main application service for development
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: heaters-app-dev
    env_file: .env
    environment:
      MIX_ENV: dev
      APP_ENV: development
      PHX_HOST: localhost
      DEV_DATABASE_URL: ${DEV_DATABASE_URL}
      S3_DEV_BUCKET_NAME: ${S3_DEV_BUCKET_NAME}
      CLOUDFRONT_DEV_DOMAIN: ${CLOUDFRONT_DEV_DOMAIN}

    volumes:
      - ./:/app
      
    command: >
      sh -c "
        mix deps.get &&
        (cd assets && npm install) &&
        mix ecto.create &&
        mix ecto.migrate &&
        mix phx.server
      "
    ports:
      - "4000:4000"
    depends_on:
      app-db-dev:
        condition: service_healthy
    networks:
      - app-network
    tty: true
    stdin_open: true