/* Hide default LV flash */
#flash-group {
    display: none !important;
}

.sprite-viewer {
    margin-top: var(--space-4);
}

/* Sprite-player controls container */
.sprite-controls {
    display: flex;
    align-items: center;
    width: 100%;
    padding: var(--space-2) 0;
    gap: var(--space-2);
    max-width: 100%;
}
  
/* Control buttons (play/pause) and undo consistency */
.sprite-controls button,
.actions .btn-ghost {
    padding: var(--space-2) var(--space-3);
    font-weight: 600;
    background: none !important;
    color: var(--fg);
    transition: background 0.15s;
}
  
  .sprite-controls button:hover,
  .actions .btn-ghost:hover {
    background: var(--panel);
    opacity: 1;
  }

/* Make ghost-button respect disabled state like .btn[disabled] */
.actions .btn-ghost[disabled],
.sprite-controls button[disabled] {
    opacity: 0.4;
    cursor: not-allowed;
}
  
/* Scrub bar expands to fill space */
.sprite-controls input[type="range"] {
    flex: 1 1 auto;
    margin: 0 var(--space-2);
    min-width: 0;
}
  
/* Fixed-width frame counter to avoid jitter and keep inside */
.sprite-controls span {
    flex: 0 0 8ch;
    text-align: right;
    font-family: monospace;
    white-space: nowrap;
}
  
/* Action buttons armed state */
.btn.approve.is-armed  { background: var(--approve); color: #fff; }
.btn.skip.is-armed     { background: var(--skip);    color: #000; }
.btn.archive.is-armed  { background: var(--archive); color: #fff; }
.btn.merge.is-armed    { background: var(--merge);   color: #fff; }
.btn.group.is-armed    { background: var(--group);   color: #000; }
.btn.split.is-armed    { background: var(--split);   color: #000; }
  
/* Split-mode outline indicator */
.split-armed {
    outline: 3px dashed var(--split);
    outline-offset: 2px;
}  